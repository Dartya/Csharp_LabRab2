using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Csharp_LabRab2
{
    class Program
    {
        static void Main(string[] args)
        {
            try{
                int i = 4;          //инициализация при создании
                double d;           //инициализация 
                d = 4.2;            //после создания
                bool b1, b2;        //инициализация булевых переменных
                b2 = (i < d);       //переменную b2 инициализируем через выражение
                b1 = b2;            //и через другую переменную

                //все перечисленные выше переменные относятся к типам значений
                /*
                Система общих типов CTS определяет способ объявления, использования и управления типами в среде CLR, 
                а также является важной составной частью поддержки межъязыковой интеграции в среде выполнения. 
                Система общих типов выполняет следующие функции.

                Типы в .NET

                Все типы на платформе .NET делятся на типы значений и ссылочные типы.

                Типы значений — это типы данных, объекты которых представлены фактическим значением объекта. Если 
                экземпляр типа значения присваивается переменной, то эта переменная получает новую копию значения.
                
                Ссылочные типы — это типы данных, объекты которых представлены ссылкой (аналогичной указателю) на 
                фактическое значение объекта. Если экземпляр ссылочного типа присваивается переменной, то эта 
                переменная будет ссылаться (указывать) на исходное значение. Копирования при этом не происходит.

                Система общих типов CTS на платформе .NET поддерживает следующие пять категорий типов:
                Классы
                Структуры
                Перечисления
                Интерфейсы
                Делегаты*/
            }
            catch (Exception e){
                Console.WriteLine(e.ToString());
            }
            finally{
                Console.Write("Press <Enter>");
                Console.ReadLine();
            }
            

        }
    }
}
